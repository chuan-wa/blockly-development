!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("blockly/core"));else if("function"==typeof define&&define.amd)define(["blockly/core"],e);else{var o="object"==typeof exports?e(require("blockly/core")):e(t.Blockly);for(var r in o)("object"==typeof exports?exports:t)[r]=o[r]}}(this,(t=>(()=>{"use strict";var e={573:e=>{e.exports=t}},o={};function r(t){var i=o[t];if(void 0!==i)return i.exports;var l=o[t]={exports:{}};return e[t](l,l.exports,r),l.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return(()=>{r.r(i),r.d(i,{FixedEdgesMetricsManager:()=>l});var t=r(573),e=r.n(t);const o={};class l extends e().MetricsManager{constructor(t){super(t)}static setFixedEdges(t){o.top=!!t.top,o.bottom=!!t.bottom,o.left=!!t.left,o.right=!!t.right}hasFixedEdges(){return!0}getComputedFixedEdges_(t){const e=this.workspace_.isMovableHorizontally(),r=this.workspace_.isMovableVertically(),i=t||this.getViewMetrics(!1),l={top:o.top?0:void 0,bottom:o.bottom?0:void 0,left:o.left?0:void 0,right:o.right?0:void 0};return o.top&&o.bottom&&(l.bottom=i.height),o.left&&o.right&&(l.right=i.width),r||(void 0!==l.top?l.bottom=l.top+i.height:void 0!==l.bottom?l.top=l.bottom-i.height:(l.top=i.top,l.bottom=i.top+i.height)),e||(void 0!==l.left?l.right=l.left+i.width:void 0!==l.right?l.left=l.right-i.width:(l.left=i.left,l.right=i.left+i.width)),l}}})(),i})()));
//# sourceMappingURL=index.js.map